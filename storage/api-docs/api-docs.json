{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "API Documentation for User API",
        "contact": {
            "email": "your-email@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local Server"
        }
    ],
    "paths": {
        "/products": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "Get list of products",
                "description": "Returns a list of products",
                "operationId": "c821c7f9e41e08594ad4eae5a99e812e",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No products found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "products"
                ],
                "summary": "Create a new product",
                "description": "Creates a new product",
                "operationId": "a59d7d76c37cb085c473698dba983938",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Product creation failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products/{id}": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "Get a product by ID",
                "description": "Returns a single product",
                "operationId": "900da7e5cb549dc28cfd19d90d1f6710",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "products"
                ],
                "summary": "Update an existing product",
                "description": "Updates a product by ID",
                "operationId": "1ab61d88b4cfff271ad6afe7d8cf0388",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Product update failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "products"
                ],
                "summary": "Delete a product",
                "description": "Deletes a product by ID",
                "operationId": "9dcbacba304004f42c516998d50fe6fa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully"
                    },
                    "500": {
                        "description": "Product deletion failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user",
                "operationId": "6f520e3a2c97d22c996d9a8a8aabf11f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Registered Successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Registration failed"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Login a user",
                "description": "Logs in a user",
                "operationId": "ea58d4cee1717deac8ecedd19342006a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Get authenticated user details",
                "description": "Returns the authenticated user's details",
                "operationId": "2fc627ea91cef27998f31b457325bcb0",
                "responses": {
                    "200": {
                        "description": "Authenticated user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Logout a user",
                "description": "Logs out the authenticated user",
                "operationId": "d26761b2ec63f4116ba45d206aa79712",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Logged Out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Failed to logout, token invalid"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "title": "LoginRequest",
                "description": "Login Request",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "description": "Password of the user",
                        "type": "string",
                        "format": "password"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "RegisterRequest",
                "description": "Register Request",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "description": "Password of the user",
                        "type": "string",
                        "format": "password"
                    }
                },
                "type": "object"
            },
            "StoreProductRequest": {
                "title": "StoreProductRequest",
                "description": "Store Product Request",
                "required": [
                    "name",
                    "description",
                    "price"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the product",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the product",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price of the product",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "UpdateProductRequest": {
                "title": "UpdateProductRequest",
                "description": "Update Product Request",
                "required": [
                    "name",
                    "description",
                    "price"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the product",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the product",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price of the product",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "description": "ID of the product",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the product",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the product",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price of the product",
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "ID of the user",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "products",
            "description": "products"
        },
        {
            "name": "auth",
            "description": "auth"
        }
    ]
}